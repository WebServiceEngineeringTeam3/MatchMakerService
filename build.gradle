plugins {
    id 'org.springframework.boot' version '2.0.3.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
}

group 'edu.kennesaw'
version '1.0.0'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springCloudServicesVersion', "2.0.3.RELEASE")
    set('springCloudVersion', "Finchley.SR1")
}

dependencies {
    //Swagger
    compile 'io.springfox:springfox-swagger2:2.8.0'
    compile 'io.springfox:springfox-swagger-ui:2.8.0'
    compile group: 'io.swagger', name: 'swagger-jaxrs', version: '1.5.18'
    compile 'com.mangofactory:swagger-springmvc:1.0.2'

    //Spring Data and DynamoDB
    compile group: 'org.springframework.data', name: 'spring-data-jpa'
    compile group: 'com.amazonaws', name: 'aws-java-sdk-dynamodb'
    compile group: 'com.github.derjust', name: 'spring-data-dynamodb', version: '5.0.4'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-cloud-connectors'
    implementation 'org.springframework.boot:spring-boot-starter-jersey'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'io.pivotal.spring.cloud:spring-cloud-services-starter-config-client'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'org.springframework.security', name: 'spring-security-config', version: '4.0.1.RELEASE'
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.3.1'


}

test {
    outputs.dir snippetsDir
    testLogging.showStandardStreams = true
}

dependencyManagement {
    imports {
        mavenBom "io.pivotal.spring.cloud:spring-cloud-services-dependencies:${springCloudServicesVersion}"
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}